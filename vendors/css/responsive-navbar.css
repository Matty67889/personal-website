/**
 * CSS for creating a responsive navigation bar
 *
 * This file contains CSS rules for creating a responsive navigation bar.
 * A navbar is a list (ordered or unordered) of links that allow for
 * navigation on a website. A responsive navbar is a navbar that changes
 * its display based on the user's screen size. The navbar was build with
 * a Mobile First design in mind, so many of the rules are centered around
 * that.
 *
 * Credits to W3Schools for the guide on how to build a navbar that
 * this navbar was inspired by.
 * https://www.w3schools.com/Css/css_navbar.asp
 *
 * @author Matthew Mentis-Cort
 * Date last edited: February 19, 2022
 */

/* Navbar Set */

/*
  Note: DO NOT USE MORE THAN ONE NAVBAR ON A SINGLE PAGE, BECAUSE THE TOGGLE
  WILL NOT WORK
*/

/*
  Included Rules:

  ### General
  *
  All elements will have their box sizing set to border-box, so margin and
  padding are included in the calculation of the width and height of an
  element.

  ### Classes
  .navbar
  Used on the wrapper class for your navbar. It's main purpose is to
	set the color of the navbar and position it properly on the website. Made
  into a class to allow the use of multiple navbars on a website.

  .navbar-toggler
  Used in the element that will be interacted with for the user to open
  the navbar on smaller screen sizes. The element with this class must
  be succeeded by an element with the class .navbar-closer (does not need
  to be immediately before, however).

  .navbar-closer
  Used in the element that will be interacted with for the user to close
  the navbar on smaller screen sizes. Only appears after the navbar-toggler
  is in focus (when the vertical navbar is being toggled to). Must be
  preceded by an element with the class "navbar-toggler" (does not need to
  be immediately preceded, however).

  .navbar-content
  Used in the element that is a wrapper class for the element with the class
  "navbar-link-list". Hides the navbar links for the vertical navbar, and
  displays the navbar links for the horizontal navbar.

  .navbar-link-list
  Used in the element that is a wrapper class for the links in the navbar.
  Removes default ul styling and sets the background color for links.

  .navbar-item
	Used in tags that represent a tab on the navbar. Handles styling for tabs
	on the navbar.

	.navbar-link
	Used in tags that link to other places on the website (namely "anchor" tags).
	Styles links so they look good with the .navbar-item.

	.dropdown
	Used as a wrapper class for dropdown related content. A dropdown is a
	wrapper for all the dropdown related classes (.dropbtn, .dropdown-content)
	when hovered over, will display content not immediately visible
	underneath the tab. Styles the dropdown content.

	.dropbtn
	Used in tags that are the tab in the navbar that, when hovered over, will
	display the dropdown content. Styles the dropdown button(s) on
	the page.

	.dropdown-content
	Used in wrapper class for dropdown content. The dropdown content is the
	tabs of the navbar within the dropdown. Styles the content in the dropdown
	and makes it appear under the dropdown button.

	.active
	Used in links that the user is currently on. Styles the navbar tab for
	the page that the user is on differently from the other tabs so that users
	know they are on that page.

	.clearfix::after
	Removes the property that makes elements flow around elements after an
	element that is set to float. Should not be needed for this navbar
	implementation.

  ### At-rules
  @media only screen and (min-width: 768px)
  Used to determine when to toggle from vertical to horizontal navbar. Toggles
  to horiztonal navbar when the screen width is 768px or greater. 768px is the
  breakpoint for tablets.
*/

/*
  Navbar HTML Template
  <nav class = "navbar">
    <button type = "button" class = "navbar-toggler">
      ...
    </button>

    <button type = "button" class = "navbar-closer">
      X
    </button>

    <div class = "navbar-content">
      <ul class = "navbar-link-list">
        <li class = "navbar-item">
          <a class = "navbar-link active" href = "#">
            Home
          </a>
        </li>

        <li class = "navbar-item">
          <a class = "navbar-link" href = "#">
            Page 1
          </a>
        </li>

        <li class = "navbar-item">
          <a class = "navbar-link" href = "#">
            Page 2
          </a>
        </li>

        <li class = "navbar-item dropdown">
          <a class = "navbar-link dropbtn" href = "#">
            Dropdown
          </a>
          <div class = "dropdown-content">
            <a class = "navbar-link" href = "#">
              Dropdown Content 1
            </a>
            <a class = "navbar-link" href = "#">
              Dropdown Content 2
            </a>
            <a class = "navbar-link" href = "#">
              Dropdown Content 3
            </a>
          </div>
        </li>

        <li class = "navbar-item">
          <a class = "navbar-link" href = "#">
            Page 3
          </a>
        </li>
      </ul>
    </div>
  </nav>
*/

/*
  Use labels for toggles instead of .navbar-toggler?
*/

/*
  Makes it so that margin and padding are included in the calculation of the
  width and height of an object
*/
*
{
  box-sizing: border-box;
}

/*
  When the screen is less than 768px, display a vertical navbar with an icon
  users can click on to activate it
*/

/* Veritcal navbar */
.navbar
{
  background-color: #232323;
  /* border: 3px solid blue; */

  padding: 10px;

  /*
    For position: fixed:

    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
  */
}

.navbar-toggler
{
  margin-bottom: 5px;

  padding: 7px 14px;

  background-color: transparent;
  color: white;

  border: 1px solid white;
  border-radius: 20%;
}

.navbar-toggler:hover
{
  background-color: gray;
}

.navbar-closer
{
  /* Do not show initially, only when the navbar-toggler is clicked */
  display: none;

  /* Has same properties as navbar-item */
  background-color: transparent;
  text-align: center;

   /* background-color: #232323; */
  padding: 14px 16px;

  text-decoration: none;
  color: white;

  /* Overrides default button properties */
  width: 100%;
  border: none;
}

.navbar-toggler:focus ~ .navbar-content, .navbar-toggler:focus ~ .navbar-closer
{
  /* background-color: blue; */
  /*
    Show the navbar content when the toggle button is clicked (credits to
    https://stackoverflow.com/questions/18749276/css-on-hover-show-another-element
    for help on this issue)
  */
  display: block;
}

/* .navbar-logo
{
  color: yellow;
  text-decoration: none;
  margin-left: 30%;
} */

.navbar-content
{
  /* Hide the links for vertical nav bars */
  display: none;
}

.navbar-link-list
{
  /* width: 30%; */
  list-style-type: none;

  background-color: #232323;

  padding: 0px;
  margin: 0px;

  overflow: hidden;
}

.navbar-item
{
  /* Each item should take up the entire width */
  display: block;
}

/* When the screen is 768px or more, display a horizontal navbar */
@media only screen and (min-width: 768px)
{
  /* Horizontal navbar */
  .navbar
  {
    /* (only use width 100% if navbar is fixed) */
    /* width: 100%; */
    padding: 0;
  }

  .navbar-toggler, .navbar-toggler:focus ~ .navbar-closer
  {
    /* Hide the navbar toggler and the navbar-closer if it is open */
    display: none;
  }

  .navbar-content
  {
    /* Show the links for the navbar */
    display: block;
  }

  .navbar-item
  {
    /* Navbar items will display right next to each other */
  	float: left;
  	/* border-right: 1px solid black; */
  }

  .navbar-item .navbar-link, .dropbtn
  {
    display: inline-block;
  }

  .dropdown
  {
    display: inline-block;
  }
}

/* Rules that stay the same for vertical and horiztonal navbars */
.navbar-item .navbar-link, .dropbtn
{
  display: block;

  text-align: center;

   /* background-color: #232323; */
  padding: 14px 16px;

  text-decoration: none;
  color: white;
}

.navbar-item .navbar-link:hover, .navbar-link.active, .dropdown:hover .dropbtn, .navbar-closer:hover
{
  background-color: gray;
}

.dropdown
{
  display: block;
}

.dropdown-content
{
  display: none;
  position: absolute;
  background-color: #232323;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.dropdown-content .navbar-link
{
  display: block;
  color: white;
  /* padding: 14px 16px; */
  text-decoration: none;
  text-align: left;
}

.dropdown-content .navbar-link:hover
{
  background-color: c4c4c4;
}

.dropdown:hover .dropdown-content
{
  /* Show the dropdown content when the dropdown button is hovered over */
  display: block;
}

/* Clearfix to make items look near after an element with a float property */
.clearfix::after
{
	content: "";
	clear: both;
	display: table;
}
